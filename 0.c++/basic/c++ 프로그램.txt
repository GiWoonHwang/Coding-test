간단한 c++ 프로그램의 기본 구조는 다음과 같다.
#include 문

#define 문 

int main()

{

    명령문;

    return 문;

}

c++ 프로그래밍은 가장 먼저 main()함수를 찾고, 그곳에서부터 실행을 시작합니다.
따라서 모든 c++ 프로그램은 반드시 하나의 main() 함수를 가지고 있어야 합니다.
main() 함수를 발견하지 못하면 c++ 컴파일러는 오류를 발생시킬 것

명령문(statment)
c++ 프로그램의 동작을 명시하고, 이러한 동작을 컴퓨터에 알려주는 데 사용되는 문장을 명령문이라고 한다.
이러한 c++의 모든 명령문은 반드시 세미콜론으로 끝나야 한다.

std::cout << "C++ 프로그래밍"; // 정상적으로 출력됨.
std::cout << "C++ 프로그래밍"  // 오류가 발생함.

반환(return)문
반환문은 함수의 종료를 의미하며, 함수를 호출한 곳으로 결과값을 반환하는 역할을 한다.
특히 main() 함수가 반환되면, 프로그램 전체가 종료된다.

선행처리(preprocess)문
#include 문과 #define 문은 모두 선행처리기에 의해 처리되는 선행처리 문입니다.
#include 문은 외부에 선언된 함수나 상수 등을 사용하기 위해서 헤더 파일의 내용을 현재 파일에 포함할 때 사용합니다.
C 언어에서는 헤더 파일에 .h 확장자를 사용했지만, C++에서는 헤더파일의 확장자를 사용하지 않기로 합니다.

#include <math.h> // C언어에서는 이 스타일만 허용됨.

#include <cmath>  // C++에서는 이 스타일뿐만 아니라 위의 스타일도 사용할 수 있음.

네임스페이스(namespace)
네임스페이스란 이름이 기억되는 영역을 뜻하며, 이름이 소속된 공간을 의미합니다.
네임스페이스는 c++ 프로그램을 작성할 때 발생하는 이름에 대한 충돌을 방지하는 주는 방법을 제공합니다.
이러한 네임스페이스 c언어에는 없는 c++ 만의 새로운 기능입니다.

c++ 프로그램의 표준 구성 요소인 클래스, 함수, 변수 등은 std라는 이름 공간에 저장되어 있습니다.
따라서 c++ 프로그램에서 표준 헤더 파일인 iostream내의 정의를 사용하려면 다음과 같이 사용해야 합니다.

#include <iostream>

#define TEXT "Welcome to C++ Programming!!" 

int main()

{

    std::cout << TEXT;

    return 0;

}
위의 예제처럼 std라는 네임스페이스에 있는 정의를 사용하려면, std:: 접두어를 붙여 해당 정의가 std라는 네임스페이스에 있는 것을 컴파일러에 알려줘야 합니다.
이러한 네임스페이스에 속한 정의를 간단하게 사용하려면 다음과 같은 명령문을 추가하면 됩니다.
using namespace std;

주석
주석이란 코드에 대한 이해를 돕는 설명을 적거나 디버깅을 위해 작성하는 일종의 메모입니다.
