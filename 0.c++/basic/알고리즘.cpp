/*
읽기 알고리즘
STL 읽기 알고리즘 함수는 컨테이너를 변경하지 않으며, 컨테이너의 지정된 범위에서 특정 데이터를 읽기만 하는 함수입니다.

STL에서 제공하는 대표적인 읽기 알고리즘 함수는 다음과 같습니다.

 

1. find()

2. for_each()

 

find() 함수는 두 개의 입력 반복자로 지정된 범위에서 특정 값을 가지는 첫 번째 요소를 가리키는 입력 반복자를 반환합니다.

for_each() 함수는 두 개의 입력 반복자로 지정된 범위의 모든 요소를 함수 객체에 대입한 후, 대입한 함수 객체를 반환합니다.



변경 알고리즘
STL 변경 알고리즘 함수는 컨테이너를 변경하지 않으며, 컨테이너의 지정된 범위에서 요소의 값만을 변경할 수 있는 함수입니다.

STL에서 제공하는 대표적인 변경 알고리즘 함수는 다음과 같습니다.

 

1. copy()

2. swap()

3. transform()

 

copy() 함수는 두 개의 입력 반복자로 지정된 범위의 모든 요소를 출력 반복자가 가리키는 위치에 복사합니다.

swap() 함수는 두 개의 참조가 가리키는 위치의 값을 서로 교환합니다.

transform() 함수는 두 개의 입력 반복자로 지정된 범위의 모든 요소를 함수 객체에 대입한 후, 출력 반복자가 가리키는 위치에 복사합니다.


정렬 알고리즘
STL 정렬 알고리즘 함수는 컨테이너의 지정된 범위의 요소들이 정렬되도록 컨테이너를 변경하는 함수입니다.

모든 정렬 알고리즘 함수는 올바른 정렬을 위해 임의 접근 반복자를 사용합니다.

따라서 임의 접근이 가능한 컨테이너만이 사용할 수 있습니다.

 

STL에서 제공하는 대표적인 정렬 알고리즘 함수는 다음과 같습니다.

 

1. sort()

2. stable_sort()

3. binary_search()

 

sort() 함수는 두 개의 임의 접근 반복자로 지정된 범위의 모든 요소를 서로 비교하여, 오름차순으로 정렬합니다.

stable_sort() 함수는 두 개의 임의 접근 반복자로 지정된 범위의 모든 요소를 서로 비교하여, 값이 서로 같은 요소들의 상대적인 순서는 유지하면서 오름차순으로 정렬합니다.


수치 알고리즘
수치 알고리즘 함수는 다른 알고리즘 함수와는 달리 numeric 헤더 파일에 정의되어 있습니다.

대표적인 수치 알고리즘 함수는 다음과 같습니다.

 

1. accumulate()

 

accumulate() 함수는 두 개의 입력 반복자로 지정된 범위의 모든 요소의 합을 반환합니다.



*/