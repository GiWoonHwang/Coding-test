/*
소수점 아래 숫자가 계속되지 않고 유한개인 소수를 유한소수라고 합니다. 분수를 소수로 고칠 때 유한소수로 나타낼 수 있는 분수인지 판별하려고 합니다. 유한소수가 되기 위한 분수의 조건은 다음과 같습니다.

기약분수로 나타내었을 때, 분모의 소인수가 2와 5만 존재해야 합니다.
두 정수 a와 b가 매개변수로 주어질 때, a/b가 유한소수이면 1을, 무한소수라면 2를 return하도록 solution 함수를 완성해주세요.

제한사항
a, b는 정수
0 < a ≤ 1,000
0 < b ≤ 1,000
입출력 예
a	b	result
7	20	1
11	22	1
12	21	2
입출력 예 설명
입출력 예 #1

분수 7/20은 기약분수 입니다. 분모 20의 소인수가 2, 5 이기 때문에 유한소수입니다. 따라서 1을 return합니다.
입출력 예 #2

분수 11/22는 기약분수로 나타내면 1/2 입니다. 분모 2는 소인수가 2 뿐이기 때문에 유한소수 입니다. 따라서 1을 return합니다.
입출력 예 #3

분수 12/21는 기약분수로 나타내면 4/7 입니다. 분모 7은 소인수가 7 이므로 무한소수입니다. 따라서 2를 return합니다.
Hint
분자와 분모의 최대공약수로 약분하면 기약분수를 만들 수 있습니다.
정수도 유한소수로 분류합니다.
*/

// a,b의 최대 공약수를 구한 후, 분모를 최대공약수로 나눈다. (최대공약수로 나누면 기약분수가 됨) 그 후 분모의 소인수를 확인함.

#include <string>
#include <vector>

using namespace std;

int gcd(int a, int b){
    // a를 b로 나눈 나머지와 b의 최대공약수는 a,b의 최대공약수가 같다. 최대공약수란 두 수 이상의 여러 수의 공약수 중 최대인 수
    if(a%b == 0){
        return b;
    }
    else{
        return gcd(b, a%b);
    }
}

int solutin(int a, int b){
    int gcd_num = 0;
    gcd_num = (a>b) ? gcd(a,b) : gcd(b,a); // 숫자 크기에 따라 유클리드 호제법 함수에 들어갈 매개변수 위치를 정해준다, 사실 이건 굳이 필요 없는듯
    
    // 최대 공약수로 나누어 주면 기약분수가 만들어진다.
    a /= gcd_num;
    b /= gcd_num;

    while(true){
        if(b % 2 ==0){
            b /= 2;
        }
        else{
            break;
        }    
    }

    while(true){
        if(b%5 == 0){
            b /= 5;
        }
        else{
            break;
        }
    }
    if (b == 1){
        return 1;
    }
    return 2;
}