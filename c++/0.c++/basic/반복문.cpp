/*
반복문이란 프로그램 내에서 똑같은 명령을 일정 횟수만큼 반복하여 수행하도록 제어하는 명령문입니다.
프로그램이 처리하는 대부분의 코드는 반복적인 형태가 많으므로, 가장 많이 사용되는 제어문 중 하나입니다.
cpp에서 사용되는 대표적인 반복문의 형태는 다음과 같습니다.
1. while 문
2. do / while 문
3. for 문
4. 범위 기반의 for 문

while 문
while 문은 특정 조건을 만족할 때까지 계속해서 주어진 명령문을 반복 실행합니다.

do /while 문
먼저 루프를 한번 실행한 후에 조건을 검사한다.
조건식의 결과와 상관없이 무조건 한 번은 루프를 실행합니다.
*/

#include <iostream>
using namespace std;

int main(){
    int num = 15;
    int i   = 0;
    while(i<num)
    {
        cout << "while 문이 현재" <<  i + 1 << "번째 반복 실행중입니다." << endl;
        i++; // 제거하면 무한 루프에 빠지게 됨
    
    }
    cout << "while 문이 종료됨 후 변수 i의 값은" << i << "입니다" << endl;
    
    do {
        cout << "do/while 문이 현재" << i + 1 << "번째 반복 수행중 입니다." << endl;
        i ++;
    } while(i > num);
    cout << "do / while 문이 종료된 후 변수 i의 값은" << i << "입니다." << endl;
    

    // C++에서는 다음 예제처럼 for 문 안에서만 사용하는 변수를 초기식에서 직접 선언할 수 있습니다. 이렇게 for 문에서 직접 선언된 변수는 for 문이 종료되면 같이 소멸됩니다.
    for (i = 0; i < num; i++)
    {
        cout << "for 문이 현재 " << i + 1 << " 번째 반복 수행중입니다." << endl;    
    }
    cout << "for 문이 종료된 후 변수 i의 값은 " << i << "입니다." << endl;
    
    /*
    범위 기반의 for문
    cpp 11부터는 범위 기반의 for문 이라는 새로운 형태의 반복문이 추가되었습니다.
    범위 기반의 for문은 표현식 안에 포함되어 있는 모든 값에 대해 한번씩 루프를 실행해 줍니다.
    이러한 범위 기반의 for문은 배열을 자동으로 인식하며, 컨테이너 클래스에서 많이 사용됩니다.
    */
    int arr[5] = {1, 3, 5, 7, 9};

 

    for (int element : arr)    
    {
        cout << element << " ";
    }
    return 1;
}