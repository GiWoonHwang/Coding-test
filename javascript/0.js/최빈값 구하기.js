/* 
최빈값은 주어진 값 중에서 가장 자주 나오는 값을 의미합니다. 정수 배열 array가 매개변수로 주어질 때, 최빈값을 return 하도록 solution 함수를 완성해보세요. 최빈값이 여러 개면 -1을 return 합니다.

제한사항
0 < array의 길이 < 100
0 ≤ array의 원소 < 1000
입출력 예
array	            result
[1, 2, 3, 3, 3, 4]	3
[1, 1, 2, 2]	    -1
[1]	1
입출력 예 설명
입출력 예 #1

[1, 2, 3, 3, 3, 4]에서 1은 1개 2는 1개 3은 3개 4는 1개로 최빈값은 3입니다.
입출력 예 #2

[1, 1, 2, 2]에서 1은 2개 2는 2개로 최빈값이 1, 2입니다. 최빈값이 여러 개이므로 -1을 return 합니다.
입출력 예 #3

[1]에는 1만 있으므로 최빈값은 1입니다.
※ 공지 - 2022년 10월 17일 제한 사항 및 테스트케이스가 수정되었습니다.
*/

// 이해 못함 나중에 풀기 => 2023-01-13 풀었

let array = [1, 2, 3, 3, 3, 4];

let m = new Map(); // Map 객체의 key 값은 유일해야 한다.

for (let n of array) {

  // 처음 key값으로 3이 들어온다 ->  m.get(3)으로 가져오지만 key가 없기 때문에, || 0 ==  값으로 0을 넣고 +1을 해줘 최종적으로 3 => 1이 된다
  // 두번째로 key에 3이 들어오면 기존에 3이라는 key 값이 존재하기 떄문에 기존 3에 대한 value(1)을 가져오고 거기에 +1을 해 최종적으로 3=>2 가된다 -> 자연스럽게 배열에 있는 값의 개수가 value로 저장된다.
  // 최종적으로 3은 array 배열에 3개 있기 때문에 key(3)에 대한 value는 3 이된다.
  m.set(n, (m.get(n) || 0) + 1);

};



// console.log([...m]) // [ [ 1, 1 ], [ 2, 1 ], [ 3, 3 ], [ 4, 1 ] ] 구조분해 할당을 통해 배열안에 배열로(2차원배열) key-value쌍이 담긴다

m = [...m].sort((a, b) => b[1] - a[1]); // [ [ 3, 3 ], [ 1, 1 ], [ 2, 1 ], [ 4, 1 ] ] value를 기준으로 내림차순 정렬을 진행한다
console.log(m)


// 배열 
let data = m.length === 1 || m[0][1] > m[1][1] ? m[0][0] : -1;


